MIDTRANS | midtrans.com    
    Midtrans Merupakan third party yang bermanfaat untuk melakukkan handle payment atau pembayaran.
    Adapun untuk mitran sendiri terdapat 2 mode production & sandbox || production digunakan saat 
    project sudah dalam kondisi production sedangkan sanbox digunakan jika program masih divase development.


    Penggunaan  : 
        1. Kita memerlukan mitran client id dan mitran server key :
            goto -> setting -> access key -> copy 2 hal tersebut
            * Karena client key akan kita akses dalam mode client ("use client") maka penamaan variabel .env nya disertakan NEXT_PUBLIC 
              ini adalah prefix dari nextjs. !khusus di .env yang diakses via client.

        2. Buat API untuk melakukkan handle generate token dan untuk menampilkan snap dari midtrans :
            example : app/api/payment/route.ts 
            * Disini kita membutuhkan nextResponse dan juga library midtrans clien oleh karena itu install - npm i midtrans-client -
              saat melakukkan import package mitrans akan muncul masalah hal ini dikarenakan midtrans belum support terhadap typescript

              SOLUSI :
              Kita bisa declare module nya secara mandiri seperti ini : 
                @/type/midtrans-client.d.ts :
                    declare module "midtrans-client";
                
                Maka error akan teratasi.
            
                full isi app/api/payment/route.ts: 
                    import { NextResponse } from "next/server";
                    import Midtrans from "midtrans-client";
                    import { ReservationProps } from "@/types/reservation";

                    const snap = new Midtrans.Snap({
                        isProduction: false, // karena kita masih sanbox maka buat ke false
                        serverKey: process.env.MIDTRANS_SERVER_KEY,
                        clientKey: process.env.NEXT_PUBLIC_MIDTRANS_CLIENT_KEY
                    })

                    export const POST = async(request: Request) => {
                        const reservation: ReservationProps = await request.json();

                        const parameter = {
                            transaction_details: {
                                order_id: reservation.id,
                                gross_amount: reservation.Payment?.amount || 0,
                            }, 
                            credit_card: {  
                                secure: true
                            },
                            customer_details: {
                                first_name: reservation.user.name,
                                email: reservation.user.email
                            }
                        }

                        const token = await snap.createTransactionToken(parameter);
                        return NextResponse.json(token);
                    }